# Response, Optimization and Design of Reactors {#sec-5_response_opt_design}

This section of *Reaction Engineering Basics* focuses on the reaction engineering analysis of an isolated ideal reactor. The analyses involve only a reactor and no other equipment. This first chapter is not specific to any one type of reactor, it applies equally to reaction engineering of batch stirred-tank reactors (BSTRs), semi-batch stirred-tank reactors (SBSTRs), continuous stirred-tank reactors (CSTRs), and plug-flow reactors (PFRs). It begins by presenting distinguishing characteristics of isolated reactor modeling assignments. It then offers a general description of three common reaction engineering tasks: reactor response tasks, reactor optimization tasks, and reactor design tasks. Finally it describes the general approach to modeling isolated reactors that is used to solve response, optimization and design problems in the remaining chapters of this section of *Reaction Engineering Basics*.

## Isolated Ideal Reactor Analysis

Reactors are typically one component of a larger chemical process. That process might include heat exchangers, other reactors, splitting and mixing of fluid streams, and many other types of equipment. Nonetheless, for analysis purposes it often is possible to draw an imaginary box around only the reactor, and treat it as an isolated system. If the reactor is a BSTR, SBSTR, CSTR or PFR, then the system consists of an isolated *ideal* reactor. The analysis of an isolated ideal reactor requires a mathematical model of the reactor.

@sec-3_design_eqns defined groups of variables and parameters that appear in the model (i. e. the reactor design equations) for a generic isolated reactor. They included reactor inputs, reactor outputs, reactor parameters, fluid properties and reaction properties. In the analysis of isolated ideal reactors, the fluid properties (heat capacities, densities, etc.) and reaction properties (rate expressions, heats of reaction, etc.) are known. Consequently, in isolated reactor modeling the quantities appearing in the reactor design equations can be grouped as **reactor inputs, reactor outputs, and process parameters**. 

Recall from @sec-3_design_eqns, the **reactor inputs** consist of the initial molar amounts (or inlet molar flow rates) of every reagent in the system, the initial (or inlet) temperature of the reacting fluid, the inlet mass flow rate and inlet temperature of the heat exchange fluid (if there is one), and, for plug-flow reactors, the inlet pressure of the reacting fluid. The **reactor outputs** consist of the final molar amounts (or outlet molar flow rates) of every reagent in the system, the final (or outlet) temperature of the reacting fluid, the outlet temperature of the heat exchange fluid (if there is one), and, for plug-flow reactors, the outlet pressure of the reacting fluid. The rate at which the reactor does work on its surroundings is also a reactor output, but for the ideal reactors in chemical processing plants, it is almost always negligible. The **process parameters** include the reactor dimensions (volume, length, diameter, etc., as appropriate), the heat transfer area, the heat transfer coefficient, catalyst bed properties (if there is a catalyst bed), and the reaction time (for a closed system) or the space time (for an open system).

The reactor design equations establish a relationship between the reactor inputs, the reactor outputs, and the process parameters. In any isolated reactor modeling assignment, the reaction engineer is given values for some of the inputs, outputs and parameters and tasked with determining the values of the others. Completing the task virtually always entails solving the reactor design equations, but the manner in which they are solved depends upon the nature of the task. In summary, an ideal reactor analysis assignment will have the following distinguishing characteristics.

* The system consists of one ideal reactor and no other equipment.
* The assignment describes the reactor and how it is operated.
* The reactions taking place are known, and rate expressions are available for them.
* The quantities of interest are reactor parameters, reactor inputs, and/or reactor outputs.

## Common Reaction Engineering Tasks

To simplify the following discussion of reaction engineering tasks, "reactor variables" will be used to refer to the combined reactor inputs, reactor outputs, and process parameters. Three common isolated reactor modeling tasks are reactor response tasks, reactor optimization tasks, and reactor design tasks. **Reactor response tasks**, as defined here, are the most straightforward of the three. In a reactor response assignment the reaction engineer is provided with a sufficient number of reactor variables to allow calculation of all other reactor variables by solving the reactor design equations. Then, knowing *all* of the reactor inputs, outputs and parameters, any other quantity of interest in the assignment, for example the conversion or a selectivity, can be calculated. Generally there is a single, correct answer to a reactor response assignment (but exceptions to this generalization wherein reactors can display multiple steady states will be examined in subsequent chapters.)

Sometimes a reactor response assignment asks for a graph of one reactor variable *versus* another. Upon initial evaluation of this type of response task assignment it can appear that there is one too few known values. That is, it can appear that one more value is needed in order to solve the reactor design equations. In fact, this is *not* the case. To generate the graph, the engineer can choose a value for one of the variables to be plotted. Using that chosen value the design equations can be solved and the other variable to be plotted can be calculated. Repeating this process over a range of values of the first variable thereby generates the data needed for making the requested graph.

In **optimization tasks** the number of reactor variables that are specified or known is *not* sufficient to allow the reaction engineer to solve the reactor design equations. In lieu of the missing reactor variables, the assignment specifies that the reaction engineer must adjust one or more reactor variables, the optimization variables, so that the value of another reactor variable, the target variable, is maximized or minimized. The assignment entails finding the optimum value of each adjusted reactor variable *and* the corresponding (minimized or maximized) value of the target variable.

The situation here is much like a response task assignment that requests a graph. Here the engineer can choose values for the optimization variables, at which point the reactor design equations can be solved and the corresponding value of the target variable can be calculated. The engineer can then choose different values for the optimization variables and again calculate the corresponding value of the target variable. This process can be repeated many times, after which the maximum or minimum value of the target value and the corresponding values of the optimization variables can be identified. In actual practice this typically is not a trial and error process. The target variable can be plotted against the optimization variable or tabulated with the optimization variables and the optimum values then identified from the plot or table. Alternatively there are software packages that will perform optimization of this type.

Optimization tasks can be much more complicated than that, however. In addition to specifying multiple optimization variables, the assignment may also impose constraints on the values of reactor variables (not just the optimization and target variables). Constraints are conditions that must be obeyed. An example of a constraint would be that the temperature of the heat exchange fluid cannot exceed some specified value because it would boil or decompose above that temperature. Again, there are constrained optimization software packages that will perform the optimization. When optimization software is used, the response function for the reactor is typically passed to that software as an argument.

**Reactor design tasks** are the most complicated of the tasks considered here. A reactor design assignment *does not* provide sufficient information to solve the reactor design equations. The reaction engineer must choose values for the missing reactor variables. In more extreme cases, the assignment may provide little more than the reagents that are available and the products that are to be produced. The type of reactor to use and how to operate it may be among the choices the reaction engineer needs to make.

Design tasks almost always involve an optimization sub-task. The quantity that needs to be maximized is typically financial in nature. The goal is to maximize the rate of making profit subject to both technical and financial constraints. Design at this level is typically taught in chemical engineering courses on plant design, and the system being optimized is typically an entire process, not just an isolated reactor.

That level of design task is well beyond the scope of *Reaction Engineering Basics*. However, highly simplified design tasks are presented herein. In general there are reactor variables that are related to the finances of an overall process. For example, the cost of operating a process may scale with the temperature of that process, in which case minimizing the temperature minimizes the operating cost. Design tasks in *Reaction Engineering Basics* use reactor variables as the quantities to be optimized. In general, there **is not** a single correct solution to a reactor design assignment. Design tasks are inherently “open-ended,” and multiple solutions are possible and acceptable.

## Creating a Response Function for Modeling Isolated Ideal Reactors

@sec-3_design_eqns described how to generate, simplify and solve the reactor design equations for each of the four ideal reactor types. @sec-3_response_func then introduced computer functions that were called response functions. Response functions are useful when numerical methods are used to complete reaction engineering tasks. In chapters [-@sec-4_kin_data_gen] through [-@sec-4_pfr_data_analysis] response functions were used for kinetics data analysis. This section presents an overview of the use of response functions for the completion isolated reactor modeling assignments. The generic discussion here may seem a bit abstract because it lacks specifics. However, it will be illustrated in every example in Chapters [-@sec-5_bstr_analysis] through [-@sec-5_continuous_design], where hopefully it will be easier to understand.

@fig-response_fcn, the schematic representation of a response function from @sec-3_response_func, indicated three kinds of arguments that can be passed to response functions. Those argument types are called adjusted values, missing values and solver guesses. **Adjusted value arguments** are passed to a response function when completion of the isolated reactor modeling assignment entails generating a graph or table. If there is one adjusted value (e. g. when making a graph), the adjusted value argument is a vector that spans the range of interest of the variable. If there are two or more adjusted value, such as when tabulating the value of a target variable and associated optimization variables, the adjusted value argument is a matrix. In that matrix, each column represents one of the optimization variables and each row represents one set of such values. When the response function is passed a vector or matrix containing adjusted variables, it must solve the reactor design equations and calculate the quantities of interest for each set of adjusted values (that is, for each row in the adjusted value vector or matrix). The response function then must return a vector or matrix containing the quantities of interest corresponding to each set of adjusted values.

A **solver guess argument** is only used when the reactor design equations are algebraic-transcendental equations (ATEs). The only ideal reactor for which the design equations are ATEs is a *steady-state* CSTR. The numerical solution of ATEs typically requires providing a guess for their solution. Sometimes, the necessary guesses can be coded within the reponse function, in which case a solver guess argument is not used. If the response function is passed an a adjusted values argument, that means the design equations will need to be solved multiple times. If the same guess can be used to solve the design equation for every adjusted value, then that guess either can be coded within the response function or it can be passed to the response function as a vector that contains the guess values as its elements. If different guesses are needed each time the design equations are solved, a matrix that contains guess values for each set of adjusted values can be provided as a solver guess argument. To summarize, a solver guess argument is only used if the design equations are ATEs, and then only if the guess cannot or is not coded within the response function. When a solver guess is used, it will either be a vector containing a single guess or a matrix containing many sets of guesses. In all cases, the response function must solve the reactor design equations, calculate the quantities of interest in the assignment and return their values.

A **missing value argument** is only used when the design equations are initial value ordinary differential equations (IVODEs), and then only under certain circumstances. When the reactor design equations are IVODEs, the dependent variables are the reactor outputs (molar amounts/flow rates, temperature, exchange fluid temperature, and PFR pressure). The IVODEs are *always* solved for the reactor outputs over some range of the independent variable (time or axial position in a PFR). A missing value argument is only used if the design equations are IVODEs *and* if a reactor input or process parameter other than the reaction time (or the size of a PFR) is unknown. In this situation, the response function is written assuming that missing value will be provided as an argument.

It should be recognized that if there are $N$ reactor design equations, those $N$ equations can be solved to find $N$ unknown values, and all other quantities in the design equations must be known. Consequently if an isolated reactor modeling assignment tasks the engineer with determining a reactor input or process parameter, then the assignment will necessarily need to specify the value of one reactor output (or a response related to it). For reasons given below, when the response function is passed a missing value argument, it must solve the design equations using the missing value and calculate the quantities of interest in the assignment. It then must additionally calculate the value of the reactor output or response specified in the assignment. The calculated value of that specified reactor output must be returned by the response function along with the other quantities of interest in the assignment.

### Solving the Reactor Design Equations within the Response Function

In most situations, the numerical solution of the reactor design equations within the response function is straightforward. The exception occurs when the reactor design equations are IVODEs and one of the unknown quantities of interest in the assignment is either a reactor input or a process parameter that *is not* directly related to the independent variable. As noted above, when this is the case, the assignment must specify one reactor output or response.

If the unknown quantity of interest *is* related to the independent variable in the IVODEs, the solution of the reactor design equations *does not* require a missing value to be provided. That is, if the quantity of interest is the reaction time for a batch, semi-batch reactor, or transient CSTR, or if it is the length, volume or space time for a PFR, the response function *should not* be written assuming that the value will be provided as an argument to the response function. In this situation, the reactor output specified in the assignment can be used as the stopping criterion for solving the IVODEs, and doing so will yield the unknown reaction time or reactor length.

If any other reactor input or process parameter is missing, its value must be provided to the response function as a missing value argument. As noted above, when a missing value is passed to the response function, the response function must use it to solve the reactor design equations, and the response function must calculate and return the value of the reactor output or response that is specified in the assignment along with any other quantities of interest.

At first it may seem odd to calculate and return the value of the specified reactor output since its value is known. The reason for this is that doing so allows the response function to be used to calculate the missing value. For this purpose, the response function can be thought of as a mathematical function that gives the value of the specified reactor output as a function of the missing reactor input or process parameter. (At this point, any other values returned by the response function are ignored.) This is shown in @eq-resp_func_as_specified_input, where $\Omega$ is used to represent the value of the specified reactor output returned by the response function, $x$ represents the missing reactor input or process parameter, and $y$ represents the reactor output variable whose value is specified in the assignment.

$$
\Omega\left(x\right) = y
$${#eq-resp_func_as_specified_input}

If $y$ in @eq-resp_func_as_specified_input is set equal to the value specified in the assignment, $y_{spec}$, the resulting equation is an ATE that can be solved to find the corresponding value of the missing reactor input or process parameter. To do so numerically, the ATE is re-written in the form of a residual equation, @eq-resp_func_as_residual_eqn. The response function can be used to create a function that evaluates the residual, and that function can be passed to an ATE solver along with a guess for the missing input, $x_{miss}$. Doing so will yield the value of the missing reactor input or process parameter.

$$
\Omega\left(x\right) = y_{spec} \qquad \Rightarrow \qquad 0 = \Omega\left(x\right) - y_{spec}
$${#eq-resp_func_as_residual_eqn}

After finding the value of $x_{miss}$, the response function can be called one last time, using that value as the missing value argument. Doing so should return the reactor output specified in the assignment along with all of the other quantities of interest in the assignment.

Again, this description may seem abstract at this point, but it should become more concrete upon reading the examples in the chapters that follow this one.

## General Approach to Modeling Isolated Ideal Reactors

A reaction engineer must know two things when given an assignment. The first is how to identify the assignment's type, and the second is the general approach that is used when solving that type of assignment. As noted previously, isolated ideal reactor modeling assignments can be identified by the following distinguishing characteristics.

* The system consists of one ideal reactor and no other equipment.
* The assignment describes the reactor and how it is operated.
* The reactions taking place are known, and rate expressions are available for them.
* The assignment asks for a reactor parameter, a reactor input, or reactor output.

Having identified an assigment as an isolated ideal reactor modeling assignment, **the general approach to completing the assignment** is as follows.

1. Choose, write and simplify the reactor design equations needed to model the reactor.
2. Formulate the numerical solution of the reactor design equations, providing all necessary ancillary equations and, for IVODEs, initial values and a stopping criterion.
	a. If the design equations are IVODEs *and* a reactor input or process parameter is missing, assume it will be provided as an argument to the response function.
3. Create a response function that solves the reactor design equations, and calculates and returns the quantities of interest.
	a. If the design equations are IVODEs and a missing value is being provided as an argument (step 2a), it should also calculate and return the reactor output or related response for which a value is specified in the assignment.
	b. If the design equations need to be solved multiple times using variables whose values are adjusted, the adjusted variables should be arguments to the response function.
4. Use the response function to calculate the quantities of interest.
	a. If the design equations are ODEs and a missing value is being provided as an argument (step 2a), first use the response function to calculate the missing quantity.
5. Complete the assignment by finding any requested minimum or maximum, generating any requested graphs, and reporting any requested values of quantities of interest.

## Symbols Used in @sec-5_response_opt_design

| Symbol | Meaning |
|:-------|:--------|
| $\Omega$ | The reactor response function. |
| $N$ | Number of reactor design equations and number of unknown quantities. |
| $x$ | The reactor input or process parameter variable that is not specified in an isolated reactor modeling assignment. |
| $x_{miss}$ | The value of the missing reactor input or process parameter that gives the response specified in the assignment. |
| $y$ | The reactor output variable whose value is specified in the assignment. |
| $y_{spec}$ | The specified value of $y$$. |

: {tbl-colwidths="[20,80]"}

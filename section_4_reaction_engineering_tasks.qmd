# Response, Optimization and Design of Reactors {#sec-4_response_opt_design}

This section of *Reaction Engineering Basics* focuses on the reaction engineering analysis of an isolated ideal reactor. The analyses involve only a reactor and no other equipment. This first chapter is not specific to any one type of reactor, it applies equally to reaction engineering of batch stirred-tank reactors (BSTRs), semi-batch stirred-tank reactors (SBSTRs), continuous stirred-tank reactors (CSTRs), and plug-flow reactors (PFRs). It begins with a general discussion of qualitative and quantitative analysis of isolated reactors. That is followed by a general description of three common reaction engineering tasks: reactor response tasks, reactor optimization tasks, and reactor design tasks. Next, general approach to completing isolated reactor modeling assignments is suggested.  That approach is used in the remaining chapters of this section of *Reaction Engineering Basics* to complete isolated ideal reactor modeling assignments that entail response, optimization and design tasks. The chapter concludes by taking a closer, but still general, look at one step in the approach to completing isolated ideal reactor modeling assignments, namely the numerical implementation of the solution.

## Isolated Ideal Reactor Analysis

Reactors are typically one component of a larger chemical process. That process might include heat exchangers, other reactors, splitting and mixing of fluid streams, and many other types of equipment. Nonetheless, for analysis purposes it often is possible to draw an imaginary box around only the reactor, and treat it as an isolated system. If the reactor is a BSTR, SBSTR, CSTR or PFR, then the system consists of an isolated *ideal* reactor. The quantitative analysis of an isolated ideal reactor requires a mathematical model of the reactor.

### Qualitative Reactor Analysis

While the quantitative analysis of an isolated ideal reactor requires creating a mathematical model of the reactor, very often it is useful and informative to first analyze the reactor qualitatively. Qualitative analysis focuses upon *how* the composition and temperature will vary as the reaction or reactions progress, but not on the magnitude of the variations. Reactions progress over time, so in qualitative analysis, changes in composition and temperature with increasing batch reaction time or flow reactor space time are of interest.

Because the analysis is qualitative, the general behavior of reactions can often be used, noting that for a typical reaction

* the rate will increase if the temperature of the reacting system is increased,
* the rate will decrease if the concentration of one or more reactants decreases,
* the rate is not strongly affected by the concentration of the products if the reaction is irreversible,
* the rate decreases as the concentration of the products increases if the reaction is reversible,
* the equilibrium constant decreases as the temperature increases if the reaction is exothermic, and
* the equilibrium constant increases as the temperature increases if the reaction is endothermic.

Of course, not all reactions behave “typically.” The approach to qualitative analysis presented here also can be applied to atypical reactions if the general behavior above is appropriately adjusted. For example for an autocatalytic reaction, the rate will increase as the concentration of at least one product increases.

The driving force for a chemical reaction is reducing the free energy of the system. Put differently, a chemical reaction always proceeds toward chemical reaction equilibrium. As a consequence, **a single chemical reaction will never change direction spontaneously**. To do so, the reaction would have to go beyond equilibrium and then turn around and go back. Since a single reaction will never change directions, the concentrations of the reactants will continually decrease over time and the concentrations of the products will continually increase over time until equilibrium is reached. As equilibrium is reached, the concentrations will stop changing over time.

The other factor to be considered in a qualitative analysis is the extent to which heat is added or removed as the reaction or reactions progress. There are a number of possibilities in this regard. Qualitative analysis is easiest and most reliable when only one reaction is taking place in a reactor that operates either adiabatically or isothermally. When only one *exothermic* reaction is taking place adiabatically, the temperature will rise continually since the reaction is releasing heat, and that heat is not being removed. Similarly, when only one *endothermic* reaction takes place adiabatically, the temperature will drop continually. When a reactor operates isothermally, the temperature does not change as the reaction proceeds. When a reactor is neither adiabatic nor isothermal, qualitative analysis can be more difficult with greater uncertainty in the results.

When a reactor operates adiabatically or isothermally with only one or two reactions taking place, the shape of plots of concentration, temperature, rate, selectivity, etc. *versus* reaction time or space time can often be predicted as follows.

1. Determine the operating procedure (e. g. isothermal or adiabatic).
2. Determine whether the reaction is typical or atypical.
3. Draw sets of axes for each plot with the quantity of interest on the y-axis and reaction time or space time on the x-axis.
4. Plot a point on each y-axis representing the initial values of the quantities of interest. (The axes need not have a scale, and as such, plotted values only indicate whether the quantity is initially large, intermediate or small in value.)
5. Determine the initial slope of each graph by considering how the concentrations and temperature will change during a short interval of time and how those changes will affect other quantities of interest, such as the rate.
6. Determine the initial curvature of each graph by considering whether the changes in the next short interval of time will be greater than, equal to, or less than those in the first interval of time.
7. Determine whether the initial curvature eventually will result in the system approaching equilibrium (i. e. will each graph asymptotically approach a horizontal line?).
8. If the initial curvature will not lead to equilibrium, infer what must happen so that the system eventually will go to equilibrium (i. e. will there be an inflection point or a minimum/maximum?), and qualitatively explain what will cause these changes in the curvature.

Qualitative analyses of this type will be practiced separately in *Reaction Engineering Basics*, but qualitative analyses are included in some of the examples in this section of the book.

### Quantitative Reactor Analysis

@sec-3_design_eqns defined groups of variables and parameters that appear in the model (i. e. the reactor design equations) for a generic isolated reactor. They included reactor inputs, reactor outputs, reactor parameters, fluid properties and reaction properties. In the analysis of isolated ideal reactors, the fluid properties (heat capacities, densities, etc.) and reaction properties (rate expressions, heats of reaction, etc.) are known. Consequently, in isolated reactor modeling the quantities appearing in the reactor design equations can be grouped as **reactor inputs, reactor outputs, and process parameters**. 

Recall from @sec-3_design_eqns, the **reactor inputs** consist of the initial molar amounts (or inlet molar flow rates) of every reagent in the system, the initial (or inlet) temperature of the reacting fluid, the inlet mass flow rate and inlet temperature of the heat exchange fluid (if there is one), and, for plug-flow reactors, the inlet pressure of the reacting fluid. The **reactor outputs** consist of the final molar amounts (or outlet molar flow rates) of every reagent in the system, the final (or outlet) temperature of the reacting fluid, the outlet temperature of the heat exchange fluid (if there is one), and, for plug-flow reactors, the outlet pressure of the reacting fluid. The rate at which the reactor does work on its surroundings is also a reactor output, but for the ideal reactors in chemical processing plants, it is almost always negligible. The **process parameters** include the reactor dimensions (volume, length, diameter, etc., as appropriate), the heat transfer area, the heat transfer coefficient, catalyst bed properties (if there is a catalyst bed), and the reaction time (for a closed system) or the space time (for an open system).

The reactor design equations establish a quantitative relationship between the reactor inputs, the reactor outputs, and the process parameters. In any isolated reactor modeling assignment, the reaction engineer is given values for some of the inputs, outputs and parameters and tasked with determining the values of the others. Completing the task virtually always entails solving the reactor design equations, but the manner in which they are solved depends upon the nature of the task. In summary, an ideal reactor analysis assignment will have the following distinguishing characteristics.

* The system consists of one ideal reactor and no other equipment.
* The assignment describes the reactor and how it is operated.
* The reactions taking place are known, and rate expressions are available for them.
* The quantities of interest are reactor parameters, reactor inputs, and/or reactor outputs.

## Common Reaction Engineering Tasks

To simplify the following discussion of reaction engineering tasks, "reactor variables" will be used to refer to the combined reactor inputs, reactor outputs, and process parameters. Three common isolated reactor modeling tasks are reactor response tasks, reactor optimization tasks, and reactor design tasks. **Reactor response tasks**, as defined here, are the most straightforward of the three. In a reactor response assignment the reaction engineer is provided with a sufficient number of reactor variables to allow calculation of all other reactor variables by solving the reactor design equations. Then, knowing *all* of the reactor inputs, outputs and parameters, any other quantity of interest in the assignment, for example the conversion or a selectivity, can be calculated. Generally there is a single, correct answer to a reactor response assignment (but exceptions to this generalization wherein reactors can display multiple steady states will be examined in subsequent chapters.)

Sometimes a reactor response assignment asks for a graph where one reactor variable is plotted *versus* another. Upon initial evaluation of this type of response task assignment it can appear that there is one too few known values. That is, it can appear that one more value is needed in order to solve the reactor design equations. In fact, this is *not* the case. To generate the graph, the engineer can choose a value for one of the variables to be plotted. Using that chosen value the design equations can be solved and the other variable to be plotted can be calculated. Repeating this process over a range of values of the first variable thereby generates the data needed for making the requested graph.

In **optimization tasks** the number of reactor variables that are specified or known is *not* sufficient to allow the reaction engineer to solve the reactor design equations. In lieu of the missing reactor variables, the assignment specifies that the reaction engineer must adjust one or more reactor variables, the optimization variables, so that the value of another reactor variable, the target variable, is maximized or minimized. The assignment entails finding the optimum value of each adjusted reactor variable *and* the corresponding (minimized or maximized) value of the target variable.

The situation here is much like a response task assignment that requests a graph. Here the engineer can choose values for the optimization variables, at which point the reactor design equations can be solved and the corresponding value of the target variable can be calculated. The engineer can then choose different values for the optimization variables and again calculate the corresponding value of the target variable. This process can be repeated many times, after which the maximum or minimum value of the target value and the corresponding values of the optimization variables can be identified. In actual practice this typically is not a trial and error process. The target variable can be plotted against the optimization variable or tabulated with the optimization variables and the optimum values then identified from the plot or table. Alternatively there are software packages that will perform optimization of this type.

Optimization tasks can be much more complicated than that, however. In addition to specifying multiple optimization variables, the assignment may also impose constraints on the values of reactor variables (not just the optimization and target variables). Constraints are conditions that must be obeyed. An example of a constraint would be that the temperature of the heat exchange fluid cannot exceed some specified value because it would boil or decompose above that temperature. Again, there are software packages that will perform constrained, multivariable optimization. When optimization software is used, the reactor is made available to that software, typically by passing it as an argument.

**Reactor design tasks** are the most complicated of the tasks considered here. A reactor design assignment *does not* provide sufficient information to solve the reactor design equations. The reaction engineer must choose values for the missing reactor variables. In more extreme cases, the assignment may provide little more than the reagents that are available and the products that are to be produced. The type of reactor to use and how to operate it may be among the choices the reaction engineer needs to make.

Design tasks almost always involve an optimization sub-task. The quantity that needs to be maximized is typically financial in nature. The goal is to maximize the rate of making profit subject to both technical and financial constraints. Design at this level is typically taught in chemical engineering courses on plant design, and the system being optimized is typically an entire process, not just an isolated reactor.

That level of design task is well beyond the scope of *Reaction Engineering Basics*. However, highly simplified design tasks are presented herein. In general there are reactor variables that are related to the finances of an overall process. For example, the cost of operating a process may scale with the temperature of that process, in which case minimizing the temperature minimizes the operating cost. Design tasks in *Reaction Engineering Basics* use reactor variables as the quantities to be optimized. In general, there **is not** a single correct solution to a reactor design assignment. Design tasks are inherently “open-ended,” and multiple solutions are possible and acceptable.

## General Approach for Completing Isolated Reactor Modeling Assignments

A reaction engineer must know two things when given an assignment. The first is knowing how to identify the assignment's type, and the second is knowing the general approach that is used when completing that type of assighment. As noted previously, isolated ideal reactor modeling assignments can be identified by the following distinguishing characteristics.

* The system consists of one ideal reactor and no other equipment.
* The assignment describes the reactor and how it is operated.
* The reactions taking place are known, and rate expressions are available for them.
* The assignment asks for a reactor parameter, a reactor input, or reactor output.

There will usually be differences, some subtle, some more significant, between one isolated reactor modeling assignment and another one. Those differences may necessitate small differences in the steps that ultimately are followed when completing the assignment. Nonetheless, a general approach to completing an isolated reactor modeling assignment can be suggested, recognizing that it will need to be adapted for each specific assignment. In *Reaction Engineering Basics*, the general approach that is used to complete isolated reactor modeling assignment is as follows.

1. Summarize the information provided in the assignment.
2. Formulate the solution mathematically.
	a. Write the necessary design equations.
	b. Write the ancillary equations needed to solve the design equations.
	c. If the design equations are IVODEs, specify the initial values and the stopping criterion, and write the equations needed to calculate them.
	d. Write the equations needed to calculate the quantities of interest after solving the reactor design equations.
	e. Briefly describe or outline how to calculate the quantities of interest using the equations written in steps 2a through 2d.
3. Implement the solution numerically.
	a. Write a response function that solves the design equations for the quantities of interest.
	b. Write a calculations function that uses the response function to perform the calculations according to step 2e.
4. Execute the calculations function.
5. Report and comment upon the results.

## Creating a Response Function for Modeling Isolated Ideal Reactors

After summarizing the information given in an assignment, the next step suggested above is to formulate the solution mathematically. To that end, @sec-3_design_eqns described how to generate, simplify and solve the reactor design equations for each of the four ideal reactor types. [Chapters -@sec-5_bstr_analysis], [-@sec-5_sbstr_analysis], [-@sec-5_cstr_analysis], and [-@sec-5_pfr_analysis] examine how to mathematically formulate the equations and their solution in order to complete isolated reactor modeling assignments involving BSTRs, SBSTRs, CSTRs, and PFRs, respectively. Those chapters also discuss the numerical implementation of the solution for each reactor type. Before proceeding to those chapters, a few general aspects of the numerical implementation of the solution can be mentioned here.

The general approach suggested above entails creating two computer functions. Generally the response function solves the reactor design equations, calculates quantities of interest in the assignment, and returns the values of those quantities of interest. The calculations function uses the response function to perform all of the calculations needed to complete the assignment. In many cases the calculations function does little more than call the response function and process the information it returns, e.g. generate a graph or find a minimum or maximum value. In other cases, the calculations function may need to call other system functions, passing the response function to them as an argument and then processing the information they return. An example of this type was encountered when performing kinetics data analysis: The calculations function passed the response function to a parameter estimation function (together with other arguments) processed the information returned by the parameter estimation software.

Response functions were introduced in @sec-3_response_func, and in chapters [-@sec-6_kin_data_gen] through [-@sec-6_pfr_data_analysis] they were used when completing kinetics data analysis assignments. This section presents an overview of response functions must be created when completing isolated reactor modeling assignments. The generic discussion here may seem a bit abstract because it lacks specifics, but hopefully the present comments will prove helpful for understanding the examples that are presented in Chapters [-@sec-5_bstr_analysis] through [-@sec-5_continuous_design].

@fig-response_fcn, the schematic representation of a response function from @sec-3_response_func, indicated three kinds of arguments that can be passed to response functions. Those argument types are called adjusted values, missing values and solver guesses. **Adjusted value arguments** are passed to a response function when completion of the isolated reactor modeling assignment entails generating a graph or table. If there is one adjusted value (e. g. when making a graph), the adjusted value argument is a vector that spans the range of interest of the variable. If there are two or more adjusted value, such as when tabulating the value of a target variable and associated optimization variables, the adjusted value argument is a matrix. In that matrix, each column represents one of the optimization variables and each row represents one set of optimization variable values. When the response function is passed a vector or matrix containing adjusted variables, it must solve the reactor design equations and calculate the quantities of interest for each set of adjusted values (that is, for each row in the adjusted value vector or matrix). The response function then must return a vector or matrix containing the quantities of interest (as columns) corresponding to each set of adjusted values(as rows that correspond to the rows in the adjusted value argument).

A **solver guess argument** is only used when the reactor design equations are algebraic-transcendental equations (ATEs). The only ideal reactor for which the design equations are ATEs is a *steady-state* CSTR. The numerical solution of ATEs typically requires providing a guess for their solution. Sometimes, the necessary guesses can be coded within the reponse function, in which case a solver guess argument is not used. If the response function is passed an adjusted values argument, that means the design equations will need to be solved multiple times. If the same guess can be used to solve the design equation for every adjusted value, then that guess either can be coded within the response function or it can be passed to the response function as a vector that contains the guess values as its elements. If different guesses are needed each time the design equations are solved, a matrix that contains guess values for each set of adjusted values can be provided as a solver guess argument. To summarize, a solver guess argument is only used if the design equations are ATEs, and then only if the guess is not or cannot be coded within the response function. When a solver guess is used, it will either be a vector containing a single guess for all of the unknowns or a matrix containing many sets of guesses. In all cases, the response function must solve the reactor design equations, calculate the quantities of interest in the assignment and return their values.

A **missing value argument** is only used when the design equations are initial value ordinary differential equations (IVODEs), and then only under certain circumstances. When the reactor design equations are IVODEs, the dependent variables are the reactor outputs (molar amounts/flow rates, temperature, exchange fluid temperature, and PFR pressure). The IVODEs are *always* solved for the reactor outputs over some range of the independent variable (time or axial position in a PFR). A missing value argument is only used if the design equations are IVODEs *and* if a reactor input or process parameter other than the reaction time (or the size of a PFR) is unknown. In this situation, the response function is written assuming that missing value will be provided as an argument.

It should be recognized that if there are $N$ reactor design equations, those $N$ equations can be solved to find $N$ unknown values, and all other quantities in the design equations must be known. Consequently if an isolated reactor modeling assignment tasks the engineer with determining a reactor input or process parameter, then the assignment will necessarily need to specify the value of one reactor output (or a response related to it). For reasons given below, when the response function is passed a missing value argument, it must solve the design equations using the missing value and calculate the quantities of interest in the assignment. It then must additionally calculate the value of the reactor output or response specified in the assignment. The calculated value of that specified reactor output must be returned by the response function along with the other quantities of interest in the assignment.

### Solving the Reactor Design Equations within the Response Function

In most situations, the numerical solution of the reactor design equations within the response function is straightforward. The exception occurs when the reactor design equations are IVODEs and one of the unknown quantities of interest in the assignment is either a reactor input or a process parameter that *is not* directly related to the independent variable. As noted above, when this is the case, the assignment must specify one reactor output or response.

If the unknown quantity of interest is the reaction time for a batch, semi-batch reactor, or transient CSTR, or if it is the length, volume or space time for a PFR, the response function *should not* be written assuming that the value will be provided as an argument to the response function. In this situation, the reactor output specified in the assignment can be used as the stopping criterion for solving the IVODEs, and doing so will yield the unknown reaction time, space time or reactor size.

If any other reactor input or process parameter is missing, its value must be provided to the response function as a missing value argument. As noted above, when a missing value is passed to the response function, the response function must use it to solve the reactor design equations, and the response function must calculate and return the value of the reactor output or response that is specified in the assignment along with any other quantities of interest.

At first it may seem odd to calculate and return the value of the specified reactor output since its value is known. The reason for this is that doing so allows the response function to be used to calculate the missing value. For this purpose, the response function can be thought of as a mathematical function that gives the value of the specified reactor output as a function of the missing reactor input or process parameter. This is shown in @eq-resp_func_as_specified_input, where $\Omega$ represents the response function, $x$, represents the missing reactor input or process parameter, and $y$ represents the reactor output variable.

$$
\Omega\left(x\right) = y
$${#eq-resp_func_as_specified_input}

If $y$ in @eq-resp_func_as_specified_input is set equal to the value specified in the assignment, $y_{spec}$, the resulting equation is an ATE that can be solved to find the value of $x$. To do so numerically, the ATE is in the form of a residual, @eq-resp_func_as_residual_eqn. A function that evaluates the residual can be defined and passed to an ATE solver along with a guess for the missing input. The ATE solver will then return the value of the missing reactor input or process parameter, $x$.

$$
0 = \Omega\left(x\right) - y_{spec}
$${#eq-resp_func_as_residual_eqn}

After finding the value of $x$, the response function can be called one last time, using that value as the missing value argument. Doing so will return the reactor output specified in the assignment along with all of the other quantities of interest in the assignment.

Again, this description may seem abstract at this point, but it should become more concrete upon reading the examples in the chapters that follow.

## Symbols Used in @sec-5_response_opt_design

| Symbol | Meaning |
|:-------|:--------|
| $\Omega$ | The reactor response function. |
| $N$ | Number of reactor design equations and number of unknown quantities. |
| $x$ | The reactor input or process parameter variable that is not specified in an isolated reactor modeling assignment. |
| $y$ | The reactor output variable whose value is specified in the assignment. |
| $y_{spec}$ | The specified value of $y$. |

: {tbl-colwidths="[20,80]"}

# Solving Differential-Algebraic Equations {#sec-apndx_solve_daes}

A set of differential-algebraic equations (DAEs) includes two subsets of equations. One subset contains differential equations and the other contains ATEs. Only one type of DAEs are important in *Reaction Engineering Basics*, and they can be solved using the same solvers as are used for ATEs and IVODEs (see @sec-apndx_solve_ates and @sec-apndx_solve_ivodes).

## DAEs in *Reaction Engineering Basics*

@sec-apndx_solve_ivodes describes how to solve IVODEs with an unknown initial value or when an unknown constant appears in the IVODEs. In essence, an implicit ATE is written for the unknown initial value or constant. Then that implicit ATE is solved together with the IVODEs. The solution of a set of DAEs as described here uses a very similar approach.

In *Reaction Engineering Basics* the IVODE subset of the DAEs will always be the reactor design equations for a PFR. The ATE subset of the DAEs will be mole and energy balances on other equipment associated with the PFR. Specifically the ATEs will be mole and energy balances on a heat exchanger when analyzing a thermally back-mixed PFR or mole and energy balances on a stream mixer and a stream splitter when analyzing a recycle PFR.

## Mathematical Formulation of the Solution of DAEs {#sec-form_soln_daes}

After summarizing the assignment, the mathematical formulation of the solution begins with writing the PFR reactor design equations and identifying the initial values and stopping criterion that will be used when solving them. The next step is to write mole and energy balances on the heat exchanger or on the stream splitter and stream mixer. The PFR reactor design equations will be IVODEs and the other mole and energy balances will be ATEs that together make up the set of DAEs being solved.

The solution of the DAEs starts with the ATEs. The number of unknown quantities appearing in the ATEs will be greater than the number of ATEs. The unknown quantities will include initial values of the IVODE dependent variables, final values of the IVODE dependent variables, and other unknown quantities. **The key to solving the DAEs** is that the ATEs are solved to find the unknown IVODE *initial* values and the other unknown quantities. It is critically important that **the ATEs are not solved to find the unknown IVODE *final* values**.

As described in @sec-apndx_solve_ates, when an ATE solver is used to solve the ATEs numerically, it must be provided with two things. The first is an initial guess for the solution of the ATEs. The second is a residuals function. The residuals function must accept a guess for the solution as an argument. It must use that guess to calculate the values of any remaining unknown quantities appearing in the residuals expressions, evaluate the residuals, and return their values.

So, for this type of DAEs, when the residuals function receives a guess for the solution of the ATEs, that guess will include values for the IVODE initial values. Using those initial values, the IVODEs can be solved numerically to get the IVODE final values. Then, using those final values, the residuals can be evaluated and returned.

The key point is that the IVODEs are solved numerically [within]{.underline} the residuals function, because within the residuals function the necessary initial values are available. The numerical solution of the IVODEs can be accomplished exactly as described in @sec-apndx_solve_ivodes.

## Numerical Implementation of the Solution of DAEs {#sec-impl_soln_daes}

The numerical implementation of the solution entails writing code similar to that used with solving ATEs (@sec-apndx_solve_ates) and IVODEs (@sec-apndx_solve_ivodes). Some of the code calls the ATE and IVODE solvers, and some of the code is called by those solvers. The specifics of writing the code will depend upon the mathematics software being used and programmer preferences. Here it is assumed that the code is split into several functions, each of which performs a specific task. There are many other, equally valid ways to structure the code. The function structure used herein is described below.

other equipment model function
: receives an initial guess for the solution of the mole and energy balances on equipment other than the reactor (i. e. the ATEs), calls an ATE solver, passing the initial guess and the name of the residuals function (below), checks that the ATE solver converged, and returns one solution of the ATEs.

residuals function
: receives a guess for the solution of the ATEs, calls the reactor model function to solve the IVODEs using the guess, uses the results to evaluate and return the residuals corresponding to the ATEs.

reactor model function
: receives the initial values, sets the stopping criterion, calls an IVODE solver, and returns corresponding sets of values of the independent variable and each of the dependent variables spanning the range from their initial value to their final value.

derivatives function
: receives the values of the independent and dependent variables at the start of an integration step, uses them to evaluate the derivatives and returns their values.

top-level code (and/or a master calculations function)
: establishes a mechanism for making quantities available to all functions, sets an initial guess for the solution of the other equipment ATEs, calls the other equipment model function to get a solution of the ATEs, and perfroms any additional calculations that are necessary.

## Example Solution of a Set of DAEs for a Recycle PFR {#sec-example_K}

```{r}
#| echo: false
#| output: false
library(tidyverse)
source("~/Libraries/R/fmt_tibble_col.R")
```

{{< include examples/reb_K_4_1/narrative.qmd >}}

![Schematic representation of a recycle PFR.](Graphics/recycle_pfr.png){#fig-example_K_4_1_schematic width="60%"}

### Mathematical Formulation of the Solution

The engineer then generated the reactor design equations, (2), (3), and (4); the initial values and stopping criterion in @tbl-example_K_4_1_initial_values; the mole and energy balances on the stream mixer, equations (5), (6), and (7); and the mole and energy balances on the stream splitter, equations (8), (9), (10), and (11).

**Reactor Design Equations**

$$
\frac{d\dot{n}_A}{dz} = - \frac{\pi D^2}{4}r_1 \tag{2}
$$

$$
\frac{d\dot{n}_Z}{dz} =  \frac{\pi D^2}{4}r_1 \tag{3}
$$

$$
\frac{dT}{dz} = - \frac{\pi D^2}{4}\frac{r_1\Delta H}{\dot{V} \breve{C}_p} \tag{4}
$$

**Initial Values and Stopping Criterion**

| Variable | Initial Value | Stopping Criterion |
|:------:|:-------:|:-------:|
| $z$ | $0$ | $L$ |
| $\dot{n}_A$ | $\dot{n}_{A,1}$ | |
| $\dot{n}_Z$ | $\dot{n}_{Z,1}$ | |
| $T$ | $T_{1}$ | |
  
: Initial values and stopping criterion for solving the IVODEs, equations (1) through (3). {#tbl-example_K_4_1_initial_values}

**Stream Splitter and Stream Mixer Design Equations**

$$
\dot{n}_{A,0} + \dot{n}_{A,4} - \dot{n}_{A,1}  = 0 = \epsilon_1 \tag{5}
$$

$$
\dot{n}_{Z,0} + \dot{n}_{Z,4} - \dot{n}_{Z,1}  = 0 = \epsilon_2 \tag{6}
$$

$$
\dot{V}_0 \breve{C}_p \left( T_{1} - T_{0} \right) + \dot{V}_4 \breve{C}_p \left( T_1 - T_4 \right) = 0 = \epsilon_3 \tag{7}
$$

$$
\dot{n}_{A,2} - \dot{n}_{A,4} - \dot{n}_{A,3}  = 0 = \epsilon_4 \tag{8}
$$

$$
\dot{n}_{Z,2} - \dot{n}_{Z,4} - \dot{n}_{Z,3}  = 0 = \epsilon_5 \tag{9}
$$

$$
T_2 - T_4 = 0 = \epsilon_6 \tag{10}
$$

$$
T_2 - T_3 = 0 = \epsilon_7 \tag{11}
$$

The engineer noted that when the derivatives were evaluated at the start of each integration step, the volumetric flow rate and the reaction rate would need to be calculated, and wrote the ancillary equations, (12) through (18), for doing so. Knowing that the splitter and mixer balances would be solved for $\dot{n}_{A,1}$, $\dot{n}_{Z,1}$, $T_{1}$, $T_4$, $\dot{n}_{A,3}$, $\dot{n}_{Z,3}$, and $T_{3}$, the engineer also noted that the molar flow rates of A and Z in streams 0, 2, and 4 and the volumetric flow rate of stream 4 will be needed to evaluate the residuals. The engineer wrote equations (19) through (24) for doing so, but equations for calculating $\dot{n}_{A,2}$, $\dot{n}_{Z,2}$, $T_{2}$ were still needed.

**Ancillary Equations for Evaluating the Derivatives**

$$
\dot{V}_3 = \dot{V}_0 \tag{12}
$$

$$
\dot{V}_4 = R_R \dot{V}_3 \tag{13}
$$

$$
\dot{V} = \dot{V}_3 + \dot{V}_4 \tag{14}
$$

$$
k_1 = k_{0,1} \exp \left( \frac{-E_1}{RT} \right) \tag{15}
$$

$$
C_A = \frac{\dot{n}_A}{\dot{V}} \tag{16}
$$

$$
C_Z = \frac{\dot{n}_Z}{\dot{V}} \tag{17}
$$

$$
r_1 = k_1C_AC_Z \tag{18}
$$

**Ancillary Equations for Evaluating the Residuals**

$$
\dot{n}_{A,0} = \dot{V}_0 C_{A,0} \tag{19}
$$

$$
\dot{n}_{Z,0} = \dot{V}_0 C_{Z,0} \tag{20}
$$

$$
\dot{V}_3 = \dot{V}_0 \tag{21}
$$

$$
\dot{V}_4 = R_R \dot{V}_3 \tag{22}
$$

$$
\dot{n}_{A,4} = R_R \dot{n}_{A,3} \tag{23}
$$

$$
\dot{n}_{Z,4} = R_R \dot{n}_{Z,3} \tag{24}
$$

### Assignment

Complete the numerical formulation of the solution, and then implement it numerically.

---

The splitter and mixer balances, equations (5) through (11), are ATEs. The engineer noted that they will be solved to find $\dot{n}_{A,1}$, $\dot{n}_{Z,1}$, $T_{1}$, $T_4$, $\dot{n}_{A,3}$, $\dot{n}_{Z,3}$, and $T_{3}$. When solving them numerically, a guess for those unknowns will be available and must be used to evaluate the residuals, $\epsilon_1$ through $\epsilon_7$ using equations (5) through (11). Before the residuals can be evaluated, the other unknown quantities, $\dot{n}_{A,0}$, $\dot{n}_{Z,0}$, $\dot{n}_{A,2}$, $\dot{n}_{Z,2}$, $T_{2}$, $\dot{n}_{A,4}$, $\dot{n}_{Z,4}$, and $\dot{V}_4$, must be calculated. Equations (19) through (24) can be used to calculate all but $\dot{n}_{A,2}$, $\dot{n}_{Z,2}$ and $T_{2}$.

Guesses for the initial and final values in @tbl-example_K_4_1_initial_values are available at this point, so the IVODEs, equations (2), (3), and (4), can be solved numerically to get values of $z$, $\dot{n}_A$, $\dot{n}_Z$, and $T$, spanning the range from the inlet of the PFR to its outlet. The molar flow rates and temperature of stream 2 are simply the outlet values.

$$
\dot{n}_{A,2} = \dot{n}_A \big\vert_{z=L} \tag{25}
$$

$$
\dot{n}_{Z,2} = \dot{n}_Z \big\vert_{z=L} \tag{26}
$$

$$
T_2 = T \big\vert_{z=L} \tag{27}
$$

**Calculations Summary**:

To calculate the quantities of interest, $\dot{n}_{A,3}$, $\dot{n}_{Z,3}$, and $T_3$, the splitter and mixer balances, equations (5) through (11) will be solved numerically to get $\dot{n}_{A,1}$, $\dot{n}_{Z,1}$, $T_{1}$, $T_4$, $\dot{n}_{A,3}$, $\dot{n}_{Z,3}$, and $T_{3}$. While doing so, the PFR design equations, (2) - (4), will be solved within the function that evaluates the residuals. The calculation details are as follow.

1. Substitute the given and known quantities in all equations.
2. When it is necessary to evaluate the residuals
    a. $\dot{n}_{A,1}$, $\dot{n}_{Z,1}$, $T_{1}$, $T_4$, $\dot{n}_{A,3}$, $\dot{n}_{Z,3}$, and $T_{3}$ will be available
    b. Solve the PFR design equations, (2) through (4), numerically to get corresponding sets of values of $z$, $\dot{n}_A$, $\dot{n}_Z$ and $T$ spanning the range from the inlet of the PFR to its outlet.
    c. calculate $\dot{n}_{A,2}$, $\dot{n}_{Z,2}$ and $T_{2}$ using equations (25) - (27).
    d. calculate $\dot{n}_{A,0}$, $\dot{n}_{Z,0}$, and $\dot{V}_3$ using equations (19) - (21).
    e. calculate $\dot{V}_4$, $\dot{n}_{A,4}$, and $\dot{n}_{Z,4}$ using equations (22) - (24).
    f. evaluate the residuals, $\epsilon_1$ through $\epsilon_7$ using equations (5) through (11).
3. When it is necessary to evaluate the derivatives
    a. values of $z$, $\dot{n}_A$, $\dot{n}_Z$ and $T$ will be available.
    b. calculate $\dot{V}_3$ using equation (12).
    c. calculate $\dot{V}_4$ using equation (13).
    d. calculate $\dot{V}$ and $k_1$ using equations (14) and (15).
    e. calculate $C_A$ and $C_Z$ using equations (16) and (17).
    e. calculate $r_1$ using equation (18).
    f. evaluate the derivatives using equations (2), (3), and (4).


### Numerical Implementation of the Solution

1. Make the given and known constants available for use in all functions,
2. Write a derivatives function that
    a. receives values of $z$, $\dot{n}_{A}$, $\dot{n}_{Z}$, and $T$ as input,
    b. calculates and returns the values of the derivatives as described in step 3 of the calculations summary
3. Write a reactor model function that
    a. receives $\dot{n}_{A,1}$, $\dot{n}_{Z,1}$, and $T_1$ as arguments,
    b. solves the PFR design equations to get corresponding sets of values of $z$, $\dot{n}_{A}$, $\dot{n}_{Z}$, and $T$ spanning the range from the PFR inlet to the PFR outlet by calling an IVODE solver and passing the following information to it:
        i. the initial values and stopping criterion in @tbl-example_K_4_1_initial_values and
        ii. the name of the derivatives function from step 2 above,
    c. checks that the solver successfully solved the IVODEs, and
    d. returns the values returned by the IVODE solver.
4. Write a residuals function that
    a. receives values of $\dot{n}_{A,1}$, $\dot{n}_{Z,1}$, $T_1$, $T_4$, $\dot{n}_{A,3}$, $\dot{n}_{Z,3}$, and $T_3$ as arguments
    b. calculates and returns the residuals as described in step 2 of the calculations summary.
5. Write a splitter and mixer model function that 
    a. receives an initial guess for $\dot{n}_{A,1}$, $\dot{n}_{Z,1}$, $T_1$, $T_4$, $\dot{n}_{A,3}$, $\dot{n}_{Z,3}$, and $T_3$ as arguments
    b. calculates $\dot{n}_{A,1}$, $\dot{n}_{Z,1}$, $T_1$, $T_4$, $\dot{n}_{A,3}$, $\dot{n}_{Z,3}$, and $T_3$ by calling an ATE solver and passing the following information to it
        i. the initial guess and
        ii. the name of the residuals function from step 4 above,
    c. checks that the solver converged, and
    d. returns the values returned by the ATE solver.
6. Perform the analysis by
    a. setting an initial guess for $\dot{n}_{A,1}$, $\dot{n}_{Z,1}$, $T_1$, $T_4$, $\dot{n}_{A,3}$, $\dot{n}_{Z,3}$, and $T_3$,
    b. calculates $\dot{n}_{A,1}$, $\dot{n}_{Z,1}$, $T_1$, $T_4$, $\dot{n}_{A,3}$, $\dot{n}_{Z,3}$, and $T_3$ by calling the splitter and mixer model function from step 5, passing the initial guess as an argument.

### Results and Discussion

```{r}
#| echo: false
#| output: false
df <- read.csv("examples/reb_K_4_1/results.csv")
df <- fmt_tibble_col(df, 2, 3, 3, 1)
```

The calculations were performed as described above and the results are shown in @tbl-apndx_K_4_1_results.

```{r}
#| echo: false
#| warning: false
#| label: tbl-apndx_K_4_1_results
#| tbl-cap: Results from solving the DAEs.
library(kableExtra)
library(knitr)
kbl(df, format = "markdown", align = "cc")
```

The numerical solution of a set of DAEs generally requires using solver that is designed for that purpose. However, DAEs are only encountered a few times in *Reaction Engineering Basics*, and each time they are encountered, the mathematical formulation and numerical implementation of the solution can be accomplished in the same manner as illustrated in this example.

:::{.callout-note collapse="false"}
## Note

The recycle stream provides backmixing of the product stream with the feed. This is similar to what happens in a CSTR. Recall that CSTRs sometimes can have multiple steady states. The same is true of a recycle PFR. In fact, the solution presented here is not the only solution.

:::

::: {.callout-note appearance="simple"}

## [SC]{style="color:blue"}o[RE]{style="color:red"} Connection

Videos showing how to complete this assignment using either Matlab or Python, along with the Matlab and Python code, are available in [SCoRE](http://buffalobadger.github.io/SCoRE/comp_daes.html)

:::

## Symbols Used in @sec-apndx_solve_daes

| Symbol | Meaning |
|:-------|:--------|
| $k_0$ | Arrhenius pre-exponential factor; an additional subscript indexes the reaction. |
| $\dot{n}$ | Molar flow rate; additional subscripts denote the reagent and identify the flow stream. |
| $r$ | Reaction rate; additional subscripts index the reaction. |
| $z$ | Axial distance from the inlet of a PFR. |
| $\breve{C}_p$ | Volumetric heat capacity. |
| $D$ | PFR diameter. |
| $E$ | Activation energy; an additional subscript indexes the reaction. |
| $L$ | Length of a PFR. |
| $P$ | Pressure. |
| $R$ | Ideal gas constant. |
| $R_R$ | Recycle ratio. |
| $T$ | Temperature; an additional subscript denotes the flow stream. |
| $\dot{V}$ | Volumetric flow rate; an additional subscript denotes the flow stream. |
| $\Delta H$ | Heat of reaction; an additional subscript indexes the reaction. |

: {tbl-colwidths="[20,80]"}
